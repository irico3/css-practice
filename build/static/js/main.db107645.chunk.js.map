{"version":3,"sources":["components/comp.module.css","reportWebVitals.ts","components/BemComp.tsx","components/CssModuleComp.tsx","components/StyledComp.tsx","components/EmotionComp.tsx","components/LinariaComp.tsx","components/LinariaComp2.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","BemComp","className","charaName","Card","href","styles","require","CssModuleComp","StyledComp","color","CharaSection","styled","section","List","ul","Item","li","Inner","a","Name","span","EmotionComp","css","innerCss","charaSectionCss","listCss","itemCss","nameCss","LinariaComp","LinariaComp2","ReactDOM","document"],"mappings":"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","file":"static/js/main.db107645.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"charaSection\":\"comp_charaSection__2LPZF\",\"list\":\"comp_list__2l7PL\",\"item\":\"comp_item__2jVXL\",\"inner--kirby\":\"comp_inner--kirby__2QmjA\",\"inner--waddleDee\":\"comp_inner--waddleDee__1qTXT\",\"inner--metaKnight\":\"comp_inner--metaKnight__1V6KL\",\"inner--dedede\":\"comp_inner--dedede__13OI6\",\"name\":\"comp_name__1Y5pl\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { FC } from 'react'\n\nexport const BemComp = () => (\n  <section className=\"charaSection\">\n    <ul className=\"charaSection__list\">\n      <Card charaName=\"kirby\" />\n      <Card charaName=\"waddleDee\" />\n      <Card charaName=\"dedede\" />\n      <Card charaName=\"metaKnight\" />\n    </ul>\n  </section>\n)\n\ntype CardProps = {\n  charaName: 'kirby' | 'waddleDee' | 'metaKnight' | 'dedede'\n}\n\nconst Card: FC<CardProps> = ({ charaName }) => (\n  <li className=\"charaSection__list__item\">\n    <a href=\"/\" className={`charaSection__list__item__inner--${charaName}`}>\n      <span className=\"charaSection__list__item__inner__name\">{charaName}</span>\n    </a>\n  </li>\n)","import React, { FC } from 'react'\nconst styles = require('./comp.module.css') //ts対策\n\nexport const CssModuleComp = () => (\n  <section className={styles.charaSection}>\n    <ul className={styles.list}>\n      <Card charaName=\"kirby\" />\n      <Card charaName=\"waddleDee\" />\n      <Card charaName=\"dedede\" />\n      <Card charaName=\"metaKnight\" />\n    </ul>\n  </section>\n)\n\ntype CardProps = {\n  charaName: 'kirby' | 'waddleDee' | 'metaKnight' | 'dedede'\n}\n\nconst Card: FC<CardProps> = ({ charaName }) => (\n  <li className={styles.item}>\n    <a href=\"/\" className={styles[`inner--${charaName}`]}>\n      <span className={styles.name}>{charaName}</span>\n    </a>\n  </li >\n)","import React, { FC } from 'react'\nimport styled from 'styled-components'\n\nexport const StyledComp = () => (\n  <CharaSection>\n    <List>\n      <Card charaName=\"kirby\" color=\"violet\" />\n      <Card charaName=\"waddleDee\" color=\"yellow\" />\n      <Card charaName=\"dedede\" color=\"rgb(104, 104, 248)\" />\n      <Card charaName=\"metaKnight\" color=\"purple\" />\n    </List>\n  </CharaSection>\n)\n\ntype CardProps = {\n  charaName: 'kirby' | 'waddleDee' | 'metaKnight' | 'dedede'\n  color: string\n}\n\nconst Card: FC<CardProps> = ({ charaName, color }) => (\n  <Item>\n    <Inner color={color} href=\"/\">\n      <Name>{charaName}</Name>\n    </Inner>\n  </Item >\n)\n\nconst CharaSection = styled.section`\n  padding: 30px;\n  background: pink;\n`\nconst List = styled.ul`\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  max-width: 1000px;\n`\n\nconst Item = styled.li`\n  position: relative;\n  margin-right: 30px;\n  padding-top: calc((100% - (30px * 3) ) / 4);\n  width: calc((100% - (30px * 3) ) / 4);\n  &:last-of-type {\n    margin-right: 0;\n  }\n`\n\nconst Inner = styled.a`\n  position: absolute;\n  inset: 0;\n  display: block;\n  width: 100%;\n  border-radius: 10px;\n  box-shadow: 5px 5px 0 0 rgb(0 0 0 / 15%);\n  background: ${({ color }) => color};\n`\n\nconst Name = styled.span`\n  color: #000;\n`","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { FC } from 'react'\nimport { css, jsx } from '@emotion/react'\n\nexport const EmotionComp = () => (\n  <section css={charaSectionCss}>\n    <ul css={listCss}>\n      <Card charaName=\"kirby\" color=\"violet\" />\n      <Card charaName=\"waddleDee\" color=\"yellow\" />\n      <Card charaName=\"dedede\" color=\"rgb(104, 104, 248)\" />\n      <Card charaName=\"metaKnight\" color=\"purple\" />\n    </ul>\n  </section>\n)\n\ntype CardProps = {\n  charaName: 'kirby' | 'waddleDee' | 'metaKnight' | 'dedede'\n  color: string\n}\n\nconst Card: FC<CardProps> = ({ charaName, color }) => (\n  <li css={itemCss}>\n    <a href=\"/\" css={innerCss(color)}>\n      <span css={nameCss}>{charaName}</span>\n    </a>\n  </li >\n)\n\nconst charaSectionCss = css`\n  padding: 30px;\n  background: pink;\n`\n\nconst listCss = css`\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  max-width: 1000px;\n`\n\nconst itemCss = css`\n  position: relative;\n  margin-right: 30px;\n  padding-top: calc((100% - (30px * 3) ) / 4);\n  width: calc((100% - (30px * 3) ) / 4);\n  &:last-of-type {\n    margin-right: 0;\n  }\n`\n\nconst innerCss = (color: string) => css`\n  position: absolute;\n  inset: 0;\n  display: block;\n  width: 100%;\n  border-radius: 10px;\n  box-shadow: 5px 5px 0 0 rgb(0 0 0 / 15%);\n  background: ${color};\n`\n\nconst nameCss = css`\n  color: #000;\n`","import React, { FC } from 'react'\nimport { styled } from '@linaria/react'\nimport { css } from '@linaria/core'\n\nexport const LinariaComp = () => (\n  <section className={charaSectionCss}>\n    <ul className={listCss}>\n      <Card charaName=\"kirby\" color=\"violet\" />\n      <Card charaName=\"waddleDee\" color=\"yellow\" />\n      <Card charaName=\"dedede\" color=\"rgb(104, 104, 248)\" />\n      <Card charaName=\"metaKnight\" color=\"purple\" />\n    </ul>\n  </section>\n)\n\ntype CardProps = {\n  charaName: 'kirby' | 'waddleDee' | 'metaKnight' | 'dedede'\n  color: string\n}\n\nconst Card: FC<CardProps> = ({ charaName, color }) => (\n  <li className={itemCss}>\n    <Inner href=\"/\" color={color}>\n      <span className={nameCss}>{charaName}</span>\n    </Inner>\n  </li >\n)\n\nconst charaSectionCss = css`\n  padding: 30px;\n  background: pink;\n`\n\nconst listCss = css`\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  max-width: 1000px;\n`\n\nconst itemCss = css`\n  position: relative;\n  margin-right: 30px;\n  padding-top: calc((100% - (30px * 3) ) / 4);\n  width: calc((100% - (30px * 3) ) / 4);\n  &:last-of-type {\n    margin-right: 0;\n  }\n`\n\n// TODO: tsエラー\nconst Inner = styled.a<{ color: string }>`\n  position: absolute;\n  inset: 0;\n  display: block;\n  width: 100%;\n  border-radius: 10px;\n  box-shadow: 5px 5px 0 0 rgb(0 0 0 / 15%);\n  background: ${({ color }: { color: string }) => color};\n`\n\nconst nameCss = css`\ncolor: #000;\n`","import React, { FC } from 'react'\nimport { styled } from '@linaria/react'\nimport { css } from '@linaria/core'\n\nexport const LinariaComp2 = () => (\n  <section className={charaSectionCss}>\n    <ul className={listCss}>\n      <Card charaName=\"kirby\" color=\"violet\" />\n      <Card charaName=\"waddleDee\" color=\"yellow\" />\n      <Card charaName=\"dedede\" color=\"rgb(104, 104, 248)\" />\n      <Card charaName=\"metaKnight\" color=\"purple\" />\n    </ul>\n  </section>\n)\n\ntype CardProps = {\n  charaName: 'kirby' | 'waddleDee' | 'metaKnight' | 'dedede'\n  color: string\n}\n\nconst Card: FC<CardProps> = ({ charaName, color }) => (\n  <li className={itemCss}>\n    <Inner href=\"/\" color={color}>\n      <span className={nameCss}>{charaName}</span>\n    </Inner>\n  </li >\n)\n\nconst charaSectionCss = css`\n  padding: 30px;\n  background: pink;\n`\n\nconst listCss = css`\n  display: flex;\n  justify-content: center;\n  margin: 0 auto;\n  max-width: 1000px;\n`\n\nconst itemCss = css`\n  position: relative;\n  margin-right: 30px;\n  padding-top: calc((100% - (30px * 3) ) / 4);\n  width: calc((100% - (30px * 3) ) / 4);\n  &:last-of-type {\n    margin-right: 0;\n  }\n`\n\n// TODO: tsエラー\nconst Inner = styled.a<{ color: string }>`\n  position: absolute;\n  inset: 0;\n  display: block;\n  width: 100%;\n  border-radius: 10px;\n  box-shadow: 5px 5px 0 0 rgb(0 0 0 / 15%);\n  background: ${({ color }: { color: string }) => color};\n`\n\nconst nameCss = css`\ncolor: #000;\n`","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport './reset.css'\n\n// component\nimport { BemComp } from './components/BemComp'\nimport { CssModuleComp } from './components/CssModuleComp'\nimport { StyledComp } from './components/StyledComp'\nimport { EmotionComp } from './components/EmotionComp'\nimport { LinariaComp } from './components/LinariaComp'\nimport { LinariaComp2 } from './components/LinariaComp2'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BemComp />\n    <CssModuleComp />\n    <StyledComp />\n    <EmotionComp />\n    <LinariaComp />\n    <LinariaComp2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}